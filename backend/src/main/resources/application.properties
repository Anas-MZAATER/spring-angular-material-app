spring.application.name=backend
server.port=8082







# ================================
# = BASE DE DONNÉES (H2 ou MySQL par exemple)
# ================================
# Exemple pour H2 :
spring.datasource.url=jdbc:h2:mem:students-db
#spring.datasource.url=jdbc:h2:mem:patients-db//pour enregisrer la bdd dans une fichier
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
#//ENABLE UNE PETITE APP WEB POUR CONSULTER LA BDD
#// VIA LE LIEN "172.0.0.1:<<PORT DE L'APP>>/h2-console"
#// et chercher <<nom de la BDE>>_DB Apres mem avec username et password
spring.h2.console.enabled=true





# ================================
# = MultipartFile est une interface de Spring qui représente un fichier \
#  envoyé par un client (navigateur, application Angular, Postman, etc.)\
#  \ via une requête HTTP multipart/form-data.
# ================================
spring.servlet.multipart.enabled=true
#La taille maximale autorisée par fichier
spring.servlet.multipart.max-file-size=50MB
#La taille maximale autorisée pour l'ensemble de la requête HTTP, donc tous les fichiers + les autres champs
spring.servlet.multipart.max-request-size=55MB




# ================================
# = hibernate
# ================================
spring.jpa.hibernate.ddl-auto=update
#SOLUTION DE LA PARTIE DEVELOPMENT : Activez le débogage de Hibernate
#pour voir les requêtes SQL exécutées. Cela aider à diagnostiquer le problème.
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE